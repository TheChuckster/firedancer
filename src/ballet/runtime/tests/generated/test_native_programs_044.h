#include "../fd_tests.h"
int test_44(fd_executor_test_suite_t *suite) {
  fd_executor_test_t test;
  fd_memset( &test, 0, FD_EXECUTOR_TEST_FOOTPRINT );
  test.disable_cnt = 47;
  uchar disabled_features[] = { 116,33,111,117,122,114,109,80,55,125,61,113,127,24,92,75,77,26,112,79,2,15,56,87,103,89,110,128,98,83,30,82,78,126,90,124,76,120,29,118,62,108,123,105,106,121,27 };
  test.disable_feature = disabled_features;
  test.test_name = "config_processor::tests::test_process_store_fail_instruction_data_too_large";
  test.test_nonce  = 4;
  test.test_number = 44;
  if (fd_executor_test_suite_check_filter(suite, &test)) return -9999;
  ulong test_accs_len = 1;
  fd_executor_test_acc_t* test_accs = fd_alloca( 1UL, FD_EXECUTOR_TEST_ACC_FOOTPRINT * test_accs_len );
  fd_memset( test_accs, 0, FD_EXECUTOR_TEST_ACC_FOOTPRINT * test_accs_len );

  fd_executor_test_acc_t* test_acc = test_accs;
  fd_base58_decode_32( "3DA91Bxf9gy6ZxaiFxUTfvGh54vkrmFPpSCgebHMkDYa",  (uchar *) &test_acc->pubkey);
  fd_base58_decode_32( "Config1111111111111111111111111111111111111",  (uchar *) &test_acc->owner);
  test_acc->lamports        = 0UL;
  test_acc->result_lamports = 0UL;
  test_acc->executable      = 0;
  test_acc->rent_epoch      = 0;
  static uchar const fd_flamenco_native_prog_test_44_acc_0_data[] = { 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 };
  test_acc->data            = fd_flamenco_native_prog_test_44_acc_0_data;
  test_acc->data_len        = 9UL;
  static uchar const fd_flamenco_native_prog_test_44_acc_0_post_data[] = { 0x00,0x15,0xcd,0x5b,0x07,0x00,0x00,0x00,0x00 };
  test_acc->result_data     = fd_flamenco_native_prog_test_44_acc_0_post_data;
  test_acc->result_data_len = 9UL;
  test_acc++;
  fd_base58_decode_32( "Config1111111111111111111111111111111111111",  (unsigned char *) &test.program_id);
  static uchar const fd_flamenco_native_prog_test_44_raw[] = { 0x01,0x3c,0x82,0x41,0x1a,0xaa,0xad,0x3b,0x66,0xfc,0x45,0x51,0x1c,0x12,0x67,0x7b,0x08,0x23,0x2e,0x3f,0x8a,0x39,0x1d,0x23,0xbe,0x4b,0x56,0x35,0x4b,0x19,0x31,0x34,0xe3,0x00,0x58,0x79,0x04,0x18,0xce,0xaf,0xb0,0x3f,0xf1,0xb8,0xa4,0xb4,0xb2,0x85,0x97,0x7a,0x8a,0x78,0xc7,0xd2,0x12,0xbb,0x49,0x41,0xad,0x88,0xf7,0x88,0x23,0xcd,0x66,0x01,0x00,0x01,0x02,0x20,0xd4,0xad,0x08,0xe0,0x1c,0xc9,0xe4,0xf7,0x1e,0xc7,0xbb,0x8d,0x62,0xb8,0x52,0xf9,0x5b,0x0b,0x03,0x29,0xf8,0x8b,0x4e,0xa1,0xdf,0x59,0x29,0xeb,0x27,0x02,0xcf,0x03,0x06,0x4a,0xa3,0x00,0x2f,0x74,0xdc,0xc8,0x6e,0x43,0x31,0x0f,0x0c,0x05,0x2a,0xf8,0xc5,0xda,0x27,0xf6,0x10,0x40,0x19,0xa3,0x23,0xef,0xa0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x00,0x09,0x00,0x15,0xcd,0x5b,0x07,0x00,0x00,0x00,0x00 };
  test.raw_tx = fd_flamenco_native_prog_test_44_raw;
  test.raw_tx_len = 179UL;
  test.expected_result = 0;
  test.custom_err = 0;

  test.accs_len = test_accs_len;
  test.accs = test_accs;

  return fd_executor_run_test( &test, suite );
}
