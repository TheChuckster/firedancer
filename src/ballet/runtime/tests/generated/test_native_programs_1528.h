#include "../fd_tests.h"
int test_1528(fd_executor_test_suite_t *suite) {
  fd_executor_test_t test;
  fd_memset( &test, 0, FD_EXECUTOR_TEST_FOOTPRINT );
  test.disable_cnt = 47;
  uchar disabled_features[] = { 29,27,124,24,30,92,112,125,33,98,121,90,76,56,103,61,78,62,117,122,26,105,55,89,77,118,111,79,109,113,126,106,75,15,82,123,120,108,127,80,114,110,87,83,2,116,128 };
  test.disable_feature = disabled_features;
  test.test_name = "tests::test_bpf_loader_upgradeable_set_upgrade_authority";
  test.test_nonce  = 38;
  test.test_number = 1528;
  if (fd_executor_test_suite_check_filter(suite, &test)) return -9999;
  ulong test_accs_len = 2;
  fd_executor_test_acc_t* test_accs = fd_alloca( 1UL, FD_EXECUTOR_TEST_ACC_FOOTPRINT * test_accs_len );
  fd_memset( test_accs, 0, FD_EXECUTOR_TEST_ACC_FOOTPRINT * test_accs_len );

  fd_executor_test_acc_t* test_acc = test_accs;
  fd_base58_decode_32( "4qqhELqHX6htvCdULVZszNARyyZbPPCuDXb6TxQfdcZ1",  (uchar *) &test_acc->pubkey);
  fd_base58_decode_32( "BPFLoaderUpgradeab1e11111111111111111111111",  (uchar *) &test_acc->owner);
  test_acc->lamports        = 1UL;
  test_acc->result_lamports = 1UL;
  test_acc->executable      = 0;
  test_acc->rent_epoch      = 0;
  static uchar const fd_flamenco_native_prog_test_1528_acc_0_data[] = { 0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x9c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 };
  test_acc->data            = fd_flamenco_native_prog_test_1528_acc_0_data;
  test_acc->data_len        = 45UL;
  static uchar const fd_flamenco_native_prog_test_1528_acc_0_post_data[] = { 0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x9c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 };
  test_acc->result_data     = fd_flamenco_native_prog_test_1528_acc_0_post_data;
  test_acc->result_data_len = 45UL;
  test_acc++;
  fd_base58_decode_32( "11111136vQmLuKJ8fQUoLFFR7vZvzUNhr4pQxkQqV",  (uchar *) &test_acc->pubkey);
  fd_base58_decode_32( "11111137KkNL1caqqsMcmPLSYFtR7kALMKm8CLF9q",  (uchar *) &test_acc->owner);
  test_acc->lamports        = 1UL;
  test_acc->result_lamports = 1UL;
  test_acc->executable      = 0;
  test_acc->rent_epoch      = 0;
  test_acc++;
  fd_base58_decode_32( "BPFLoaderUpgradeab1e11111111111111111111111",  (unsigned char *) &test.program_id);
  static uchar const fd_flamenco_native_prog_test_1528_raw[] = { 0x01,0xce,0x5e,0x9b,0xef,0xe1,0x93,0xc4,0x01,0xc1,0xd5,0x21,0xc2,0x9a,0xf1,0x9c,0x39,0x5b,0xa4,0x98,0x77,0xf2,0x53,0xa6,0x75,0x07,0x4d,0x2d,0x26,0x3b,0xff,0x10,0xeb,0x27,0xff,0xc7,0x02,0x9b,0x78,0xe7,0xbc,0x01,0x90,0x73,0x5b,0x98,0xd9,0xbc,0x3c,0x97,0xd2,0x3d,0xea,0x4a,0x7b,0xce,0xa0,0x36,0x46,0x3e,0x15,0xa2,0x3e,0xd5,0x7c,0x01,0x01,0x01,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x2f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x39,0x15,0xff,0x67,0x27,0x62,0x67,0xe9,0x47,0xe0,0x41,0x7c,0x6d,0x8b,0xe0,0x07,0x6e,0x20,0x0e,0x0a,0x6c,0x6d,0xda,0xae,0xc4,0x14,0x8c,0x01,0x32,0x44,0x1c,0x4c,0x02,0xa8,0xf6,0x91,0x4e,0x88,0xa1,0xb0,0xe2,0x10,0x15,0x3e,0xf7,0x63,0xae,0x2b,0x00,0xc2,0xb9,0x3d,0x16,0xc1,0x24,0xd2,0xc0,0x53,0x7a,0x10,0x04,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x02,0x02,0x01,0x00,0x04,0x04,0x00,0x00,0x00 };
  test.raw_tx = fd_flamenco_native_prog_test_1528_raw;
  test.raw_tx_len = 207UL;
  test.expected_result = -2;
  test.custom_err = 0;

  test.accs_len = test_accs_len;
  test.accs = test_accs;

  return fd_executor_run_test( &test, suite );
}
