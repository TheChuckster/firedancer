#include "../fd_tests.h"
int test_1376(fd_executor_test_suite_t *suite) {
  fd_executor_test_t test;
  fd_memset( &test, 0, FD_EXECUTOR_TEST_FOOTPRINT );
  test.disable_cnt = 47;
  uchar disabled_features[] = { 120,110,76,126,61,75,105,128,113,114,117,103,33,82,123,55,29,30,83,116,78,124,15,56,87,27,108,122,62,98,118,121,112,127,89,92,90,24,77,109,106,2,111,80,125,79,26 };
  test.disable_feature = disabled_features;
  test.test_name = "system_instruction_processor::tests::test_create_already_in_use";
  test.test_nonce  = 10;
  test.test_number = 1376;
  if (fd_executor_test_suite_check_filter(suite, &test)) return -9999;
  ulong test_accs_len = 2;
  fd_executor_test_acc_t* test_accs = fd_alloca( 1UL, FD_EXECUTOR_TEST_ACC_FOOTPRINT * test_accs_len );
  fd_memset( test_accs, 0, FD_EXECUTOR_TEST_ACC_FOOTPRINT * test_accs_len );

  fd_executor_test_acc_t* test_acc = test_accs;
  fd_base58_decode_32( "1111113VFfjzRrnYB87BtV4GuQkqx5Y8qsAsTd9Pd1",  (uchar *) &test_acc->pubkey);
  fd_base58_decode_32( "11111111111111111111111111111111",  (uchar *) &test_acc->owner);
  test_acc->lamports        = 100UL;
  test_acc->result_lamports = 100UL;
  test_acc->executable      = 0;
  test_acc->rent_epoch      = 0;
  test_acc++;
  fd_base58_decode_32( "1111113VG55bQy5ptJa4hvCMvq6ASCovUNRpArjDwM",  (uchar *) &test_acc->pubkey);
  fd_base58_decode_32( "11111111111111111111111111111111",  (uchar *) &test_acc->owner);
  test_acc->lamports        = 0UL;
  test_acc->result_lamports = 0UL;
  test_acc->executable      = 0;
  test_acc->rent_epoch      = 0;
  static uchar const fd_flamenco_native_prog_test_1376_acc_1_data[] = { 0x00 };
  test_acc->data            = fd_flamenco_native_prog_test_1376_acc_1_data;
  test_acc->data_len        = 1UL;
  static uchar const fd_flamenco_native_prog_test_1376_acc_1_post_data[] = { 0x00 };
  test_acc->result_data     = fd_flamenco_native_prog_test_1376_acc_1_post_data;
  test_acc->result_data_len = 1UL;
  test_acc++;
  fd_base58_decode_32( "11111111111111111111111111111111",  (unsigned char *) &test.program_id);
  static uchar const fd_flamenco_native_prog_test_1376_raw[] = { 0x02,0x25,0xd5,0x8d,0xe0,0x27,0xd0,0x46,0xdc,0xd5,0x3e,0x38,0x2d,0x9d,0x3d,0x24,0x6b,0x2b,0xb9,0xde,0x09,0x37,0x5c,0x41,0xe4,0x9e,0x10,0xa0,0x12,0x55,0x09,0xf3,0x3a,0x76,0xa7,0x9f,0xa5,0x31,0xa5,0x63,0xff,0x5b,0x62,0x80,0x37,0x6f,0xc4,0xe1,0x78,0x14,0xae,0xae,0xd7,0x2f,0xb6,0x52,0x14,0xc0,0x0b,0x6e,0xd6,0xfa,0x12,0x07,0x79,0x35,0x1e,0x49,0x42,0x1d,0x79,0xd1,0x43,0x0c,0x67,0x59,0x01,0x42,0x30,0xdf,0xcf,0x42,0x4d,0xaf,0xc1,0x26,0x3b,0xd8,0x0b,0x03,0x03,0xcc,0x4f,0x8b,0x88,0x8e,0xf3,0x25,0xff,0x66,0x33,0x21,0x4a,0xc4,0x6a,0x7d,0x68,0xd6,0xaa,0x6f,0x9f,0x92,0x96,0x74,0x89,0xcd,0xc4,0xe8,0x5a,0xe2,0xb8,0x44,0x2c,0xda,0x57,0x3b,0xbe,0x06,0xdd,0x02,0x02,0x01,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x51,0x39,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x51,0x3a,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x02,0x02,0x00,0x01,0x34,0x00,0x00,0x00,0x00,0x32,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09 };
  test.raw_tx = fd_flamenco_native_prog_test_1376_raw;
  test.raw_tx_len = 319UL;
  test.expected_result = -26;
  test.custom_err = 0;

  test.accs_len = test_accs_len;
  test.accs = test_accs;

  return fd_executor_run_test( &test, suite );
}
