#include "../fd_tests.h"
int test_1421(fd_executor_test_suite_t *suite) {
  fd_executor_test_t test;
  fd_memset( &test, 0, FD_EXECUTOR_TEST_FOOTPRINT );
  test.disable_cnt = 0;
  uchar disabled_features[] = { 120,123,24,118,103,109,87,75,89,128,114,116,117,106,92,110,90,124,33,26,27,62,61,126,82,79,108,122,113,80,127,112,55,15,30,78,29,121,105,125,111,2,98,83,77,56,76 };
  test.disable_feature = disabled_features;
  test.test_name = "system_instruction_processor::tests::test_process_authorize_ix_ok";
  test.test_nonce  = 38;
  test.test_number = 1421;
  if (fd_executor_test_suite_check_filter(suite, &test)) return -9999;
  ulong test_accs_len = 1;
  fd_executor_test_acc_t* test_accs = fd_alloca( 1UL, FD_EXECUTOR_TEST_ACC_FOOTPRINT * test_accs_len );
  fd_memset( test_accs, 0, FD_EXECUTOR_TEST_ACC_FOOTPRINT * test_accs_len );

  fd_executor_test_acc_t* test_acc = test_accs;
  fd_base58_decode_32( "1111113XYrceLoSuBqVCaxCx1H1LTadYAqT6n9E8K9",  (uchar *) &test_acc->pubkey);
  fd_base58_decode_32( "11111111111111111111111111111111",  (uchar *) &test_acc->owner);
  test_acc->lamports        = 1000000UL;
  test_acc->result_lamports = 1000000UL;
  test_acc->executable      = 0;
  test_acc->rent_epoch      = 0;
  static uchar const fd_flamenco_native_prog_test_1421_acc_0_data[] = { 0x01,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x52,0x84,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7a,0x3b,0xd5,0xcd,0xf2,0x90,0x09,0x8e,0x5b,0x4c,0x8f,0x99,0x57,0xf9,0x89,0x92,0x10,0xb8,0xbb,0xe9,0x06,0x4f,0x72,0xb3,0x26,0xcc,0x21,0x2e,0xab,0x47,0x6f,0x8a,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 };
  test_acc->data            = fd_flamenco_native_prog_test_1421_acc_0_data;
  test_acc->data_len        = 80UL;
  static uchar const fd_flamenco_native_prog_test_1421_acc_0_post_data[] = { 0x01,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x52,0x84,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7a,0x3b,0xd5,0xcd,0xf2,0x90,0x09,0x8e,0x5b,0x4c,0x8f,0x99,0x57,0xf9,0x89,0x92,0x10,0xb8,0xbb,0xe9,0x06,0x4f,0x72,0xb3,0x26,0xcc,0x21,0x2e,0xab,0x47,0x6f,0x8a,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 };
  test_acc->result_data     = fd_flamenco_native_prog_test_1421_acc_0_post_data;
  test_acc->result_data_len = 80UL;
  test_acc++;
  fd_base58_decode_32( "11111111111111111111111111111111",  (unsigned char *) &test.program_id);
  static uchar const fd_flamenco_native_prog_test_1421_raw[] = { 0x01,0x91,0x4e,0x2e,0xeb,0x97,0x20,0x03,0xb0,0x25,0x6d,0x74,0x33,0xd5,0x4f,0x41,0x74,0x5c,0x97,0x07,0xba,0x98,0xfc,0x52,0x9b,0x41,0x69,0x1e,0xb4,0xe9,0xa4,0x58,0x94,0xc1,0xa4,0x83,0x82,0x55,0x63,0xe8,0xdb,0x0c,0x59,0xba,0x51,0xe7,0x04,0x28,0x5c,0xea,0x46,0x1a,0xac,0xce,0x0c,0xf9,0x94,0x34,0x51,0x65,0xb2,0xb7,0xd1,0xcd,0x23,0x01,0x00,0x01,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x52,0x84,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x00,0x24,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x52,0x84,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 };
  test.raw_tx = fd_flamenco_native_prog_test_1421_raw;
  test.raw_tx_len = 206UL;
  test.expected_result = 0;
  test.custom_err = 0;

  test.accs_len = test_accs_len;
  test.accs = test_accs;

  return fd_executor_run_test( &test, suite );
}
