#include "../fd_tests.h"
int test_1380(fd_executor_test_suite_t *suite) {
  fd_executor_test_t test;
  fd_memset( &test, 0, FD_EXECUTOR_TEST_FOOTPRINT );
  test.disable_cnt = 0;
  uchar disabled_features[] = { 15,126,116,29,113,110,61,77,92,108,114,122,90,124,24,82,26,117,125,87,120,118,109,103,89,27,128,83,105,106,75,112,127,55,56,62,78,33,79,76,30,121,98,111,123,80,2 };
  test.disable_feature = disabled_features;
  test.test_name = "system_instruction_processor::tests::test_create_already_in_use";
  test.test_nonce  = 16;
  test.test_number = 1380;
  if (fd_executor_test_suite_check_filter(suite, &test)) return -9999;
  ulong test_accs_len = 2;
  fd_executor_test_acc_t* test_accs = fd_alloca( 1UL, FD_EXECUTOR_TEST_ACC_FOOTPRINT * test_accs_len );
  fd_memset( test_accs, 0, FD_EXECUTOR_TEST_ACC_FOOTPRINT * test_accs_len );

  fd_executor_test_acc_t* test_acc = test_accs;
  fd_base58_decode_32( "1111113WhN3TESnTreVRze4Hzg38pA9mknm5LLUfQj",  (uchar *) &test_acc->pubkey);
  fd_base58_decode_32( "11111111111111111111111111111111",  (uchar *) &test_acc->owner);
  test_acc->lamports        = 100UL;
  test_acc->result_lamports = 100UL;
  test_acc->executable      = 0;
  test_acc->rent_epoch      = 0;
  test_acc++;
  fd_base58_decode_32( "1111113WhmP4DZ5kZpxJp5CP26NTJHRZPJ223a4Vj5",  (uchar *) &test_acc->pubkey);
  fd_base58_decode_32( "11111111111111111111111111111111",  (uchar *) &test_acc->owner);
  test_acc->lamports        = 0UL;
  test_acc->result_lamports = 0UL;
  test_acc->executable      = 0;
  test_acc->rent_epoch      = 0;
  static uchar const fd_flamenco_native_prog_test_1380_acc_1_data[] = { 0x00 };
  test_acc->data            = fd_flamenco_native_prog_test_1380_acc_1_data;
  test_acc->data_len        = 1UL;
  static uchar const fd_flamenco_native_prog_test_1380_acc_1_post_data[] = { 0x00 };
  test_acc->result_data     = fd_flamenco_native_prog_test_1380_acc_1_post_data;
  test_acc->result_data_len = 1UL;
  test_acc++;
  fd_base58_decode_32( "11111111111111111111111111111111",  (unsigned char *) &test.program_id);
  static uchar const fd_flamenco_native_prog_test_1380_raw[] = { 0x02,0x69,0x1f,0x22,0x91,0xe0,0xf4,0xfe,0xc3,0x38,0x77,0x2f,0xab,0x59,0x7a,0xdb,0x17,0x38,0x01,0x55,0xed,0xf8,0xdc,0xc0,0x44,0x94,0x4a,0x2f,0x17,0x3c,0x4d,0x01,0x0b,0x01,0x35,0x38,0xb4,0xd6,0xdc,0x66,0xc4,0x3f,0xb9,0xb1,0xf1,0x56,0x1a,0xea,0x78,0x64,0x64,0xd3,0xab,0x56,0xbd,0x0b,0x43,0x88,0xae,0xfb,0x21,0x7c,0xbd,0xe5,0xf4,0xd9,0xef,0x2d,0x60,0x56,0xcd,0x0a,0xad,0x0e,0x1b,0xeb,0x35,0x4a,0x0c,0x62,0x19,0x1a,0x23,0xe9,0x9f,0xb9,0x33,0x23,0x16,0x8b,0x8c,0x45,0x51,0x89,0x4e,0x4c,0xb1,0x11,0x4e,0xd4,0x03,0x05,0x0c,0xd3,0x2b,0xc5,0xfa,0x16,0x96,0xb2,0xe6,0x0c,0x5b,0x97,0xaa,0x98,0x12,0x8f,0x1f,0xdc,0xb5,0xa6,0x58,0x74,0xb1,0x6b,0x87,0xbd,0x98,0x02,0x02,0x01,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x52,0x09,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x52,0x0a,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x02,0x02,0x00,0x01,0x34,0x00,0x00,0x00,0x00,0x32,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09 };
  test.raw_tx = fd_flamenco_native_prog_test_1380_raw;
  test.raw_tx_len = 319UL;
  test.expected_result = -26;
  test.custom_err = 0;

  test.accs_len = test_accs_len;
  test.accs = test_accs;

  return fd_executor_run_test( &test, suite );
}
