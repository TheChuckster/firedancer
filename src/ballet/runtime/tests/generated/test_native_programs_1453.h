#include "../fd_tests.h"
int test_1453(fd_executor_test_suite_t *suite) {
  fd_executor_test_t test;
  fd_memset( &test, 0, FD_EXECUTOR_TEST_FOOTPRINT );
  test.disable_cnt = 0;
  uchar disabled_features[] = { 128,33,117,92,62,90,24,77,103,30,98,122,120,125,26,89,55,108,80,118,78,29,83,106,126,110,109,124,87,123,112,105,61,56,27,116,82,111,121,114,15,127,75,76,79,2,113 };
  test.disable_feature = disabled_features;
  test.test_name = "system_instruction_processor::tests::test_request_more_than_allowed_data_length";
  test.test_nonce  = 45;
  test.test_number = 1453;
  if (fd_executor_test_suite_check_filter(suite, &test)) return -9999;
  ulong test_accs_len = 2;
  fd_executor_test_acc_t* test_accs = fd_alloca( 1UL, FD_EXECUTOR_TEST_ACC_FOOTPRINT * test_accs_len );
  fd_memset( test_accs, 0, FD_EXECUTOR_TEST_ACC_FOOTPRINT * test_accs_len );

  fd_executor_test_acc_t* test_acc = test_accs;
  fd_base58_decode_32( "1111113Xhi3v1C1EoogUaVGrYWLM8Lcr1w7rRJ4TGj",  (uchar *) &test_acc->pubkey);
  fd_base58_decode_32( "11111111111111111111111111111111",  (uchar *) &test_acc->owner);
  test_acc->lamports        = 100UL;
  test_acc->result_lamports = 100UL;
  test_acc->executable      = 0;
  test_acc->rent_epoch      = 0;
  test_acc++;
  fd_base58_decode_32( "1111113Xi7PWzJJXWz9MPvQwZvffcTtdeSNo8XeHb5",  (uchar *) &test_acc->pubkey);
  fd_base58_decode_32( "11111111111111111111111111111111",  (uchar *) &test_acc->owner);
  test_acc->lamports        = 0UL;
  test_acc->result_lamports = 0UL;
  test_acc->executable      = 0;
  test_acc->rent_epoch      = 0;
  test_acc++;
  fd_base58_decode_32( "11111111111111111111111111111111",  (unsigned char *) &test.program_id);
  static uchar const fd_flamenco_native_prog_test_1453_raw[] = { 0x02,0x32,0x57,0xb0,0x45,0x42,0x71,0x50,0xa1,0xf1,0x38,0x55,0xe7,0x8a,0xb2,0xef,0xac,0x1d,0x55,0x12,0xcd,0xeb,0x16,0xdf,0x4b,0x0c,0xfd,0xa1,0xb1,0xb8,0x3a,0xaf,0x3f,0x74,0xaf,0x56,0x41,0x20,0x44,0x43,0x6b,0xa5,0xcf,0xd0,0x77,0x08,0x8f,0xf6,0x86,0x59,0x39,0xff,0x74,0x36,0x28,0x8c,0x78,0x45,0x3c,0x25,0xe2,0x33,0xa3,0x04,0x9f,0x11,0xdd,0xc4,0xff,0x6c,0x1c,0x56,0x2a,0xac,0x13,0xbd,0x63,0x48,0x1b,0xdc,0x8f,0x47,0xcf,0x4b,0xdd,0x5e,0xd9,0x88,0x52,0x07,0xc0,0x3d,0x33,0xe0,0x7b,0x67,0x95,0x3d,0x75,0x0b,0xe3,0xbd,0xc9,0xb7,0xd0,0xa2,0xe2,0x09,0xce,0xa0,0x80,0x55,0x7a,0x4f,0xcd,0xe2,0x20,0xb9,0x8b,0x12,0x28,0x78,0x90,0x60,0x0e,0xb1,0x85,0xe2,0xa0,0x02,0x00,0x01,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x52,0x9a,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x52,0x9b,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x02,0x02,0x00,0x01,0x34,0x00,0x00,0x00,0x00,0x32,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0xa0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 };
  test.raw_tx = fd_flamenco_native_prog_test_1453_raw;
  test.raw_tx_len = 319UL;
  test.expected_result = -26;
  test.custom_err = 3;

  test.accs_len = test_accs_len;
  test.accs = test_accs;

  return fd_executor_run_test( &test, suite );
}
