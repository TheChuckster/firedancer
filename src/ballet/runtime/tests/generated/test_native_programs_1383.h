#include "../fd_tests.h"
int test_1383(fd_executor_test_suite_t *suite) {
  fd_executor_test_t test;
  fd_memset( &test, 0, FD_EXECUTOR_TEST_FOOTPRINT );
  test.disable_cnt = 0;
  uchar disabled_features[] = { 62,126,78,112,79,55,123,27,111,98,82,121,122,77,109,103,2,110,128,108,116,117,15,127,61,118,92,125,90,120,83,24,26,75,89,106,76,56,113,30,105,33,80,114,87,29,124 };
  test.disable_feature = disabled_features;
  test.test_name = "system_instruction_processor::tests::test_create_data_populated";
  test.test_nonce  = 11;
  test.test_number = 1383;
  if (fd_executor_test_suite_check_filter(suite, &test)) return -9999;
  ulong test_accs_len = 2;
  fd_executor_test_acc_t* test_accs = fd_alloca( 1UL, FD_EXECUTOR_TEST_ACC_FOOTPRINT * test_accs_len );
  fd_memset( test_accs, 0, FD_EXECUTOR_TEST_ACC_FOOTPRINT * test_accs_len );

  fd_executor_test_acc_t* test_acc = test_accs;
  fd_base58_decode_32( "1111113WiAifCfP3H1RBdWLU3WhmnQhM1oGxkoeL3R",  (uchar *) &test_acc->pubkey);
  fd_base58_decode_32( "11111111111111111111111111111111",  (uchar *) &test_acc->owner);
  test_acc->lamports        = 100UL;
  test_acc->result_lamports = 100UL;
  test_acc->executable      = 0;
  test_acc->rent_epoch      = 0;
  test_acc++;
  fd_base58_decode_32( "1111113Wia4GBmgKzBt4SwUZ4w36GXy8eJXuU3EAMm",  (uchar *) &test_acc->pubkey);
  fd_base58_decode_32( "11111111111111111111111111111111",  (uchar *) &test_acc->owner);
  test_acc->lamports        = 0UL;
  test_acc->result_lamports = 0UL;
  test_acc->executable      = 0;
  test_acc->rent_epoch      = 0;
  static uchar const fd_flamenco_native_prog_test_1383_acc_1_data[] = { 0x00,0x01,0x02,0x03 };
  test_acc->data            = fd_flamenco_native_prog_test_1383_acc_1_data;
  test_acc->data_len        = 4UL;
  static uchar const fd_flamenco_native_prog_test_1383_acc_1_post_data[] = { 0x00,0x01,0x02,0x03 };
  test_acc->result_data     = fd_flamenco_native_prog_test_1383_acc_1_post_data;
  test_acc->result_data_len = 4UL;
  test_acc++;
  fd_base58_decode_32( "11111111111111111111111111111111",  (unsigned char *) &test.program_id);
  static uchar const fd_flamenco_native_prog_test_1383_raw[] = { 0x02,0x71,0x68,0xa1,0xcb,0x69,0x34,0xb4,0x67,0x02,0x33,0x76,0x1c,0xdb,0x3e,0xb1,0x89,0x79,0xc1,0xd9,0x64,0xb5,0x89,0x1a,0x84,0xa0,0x82,0xc8,0xc0,0xf8,0xff,0x4f,0x44,0x50,0x36,0xd4,0x68,0x10,0x15,0xd5,0xb2,0xd6,0xb5,0xa4,0xc9,0x40,0xfd,0x47,0x04,0x25,0xe4,0x37,0xfc,0xc6,0x0e,0xb0,0x51,0xc6,0x3f,0x00,0x14,0xde,0x56,0xe4,0x6b,0xa7,0xfa,0x92,0xd5,0x1e,0xc2,0x25,0xc3,0xa5,0xbf,0xd6,0xb9,0x8d,0x0c,0xd5,0xc8,0x8d,0x78,0x11,0x1f,0x2f,0x90,0xc2,0xb0,0x10,0x8f,0x93,0x92,0xc2,0x65,0x4d,0x9e,0xfb,0x65,0x00,0xc4,0x8b,0x5b,0x82,0xb7,0x90,0xb9,0x0f,0xce,0x21,0xe9,0x4a,0x93,0xce,0xdc,0x48,0x8e,0xb4,0xdc,0xf0,0x36,0xe9,0xae,0x15,0xca,0x64,0xdd,0x8d,0x96,0x02,0x02,0x01,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x52,0x0b,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x52,0x0c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x02,0x02,0x00,0x01,0x34,0x00,0x00,0x00,0x00,0x32,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09 };
  test.raw_tx = fd_flamenco_native_prog_test_1383_raw;
  test.raw_tx_len = 319UL;
  test.expected_result = -26;
  test.custom_err = 0;

  test.accs_len = test_accs_len;
  test.accs = test_accs;

  return fd_executor_run_test( &test, suite );
}
