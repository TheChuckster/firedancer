#include "../fd_tests.h"
int test_1507(fd_executor_test_suite_t *suite) {
  fd_executor_test_t test;
  fd_memset( &test, 0, FD_EXECUTOR_TEST_FOOTPRINT );
  test.disable_cnt = 0;
  uchar disabled_features[] = { 92,55,128,127,113,110,30,108,121,24,79,87,112,26,126,80,2,116,83,109,62,82,111,105,27,125,122,15,124,117,78,56,61,114,29,106,75,103,89,123,90,118,33,120,77,98,76 };
  test.disable_feature = disabled_features;
  test.test_name = "tests::test_bpf_loader_upgradeable_close";
  test.test_nonce  = 4;
  test.test_number = 1507;
  if (fd_executor_test_suite_check_filter(suite, &test)) return -9999;
  ulong test_accs_len = 3;
  fd_executor_test_acc_t* test_accs = fd_alloca( 1UL, FD_EXECUTOR_TEST_ACC_FOOTPRINT * test_accs_len );
  fd_memset( test_accs, 0, FD_EXECUTOR_TEST_ACC_FOOTPRINT * test_accs_len );

  fd_executor_test_acc_t* test_acc = test_accs;
  fd_base58_decode_32( "11111131h1vYVSYuKP6AhS86fbRdMw9XHiZAvAaj1",  (uchar *) &test_acc->pubkey);
  fd_base58_decode_32( "BPFLoaderUpgradeab1e11111111111111111111111",  (uchar *) &test_acc->owner);
  test_acc->lamports        = 1UL;
  test_acc->result_lamports = 0UL;
  test_acc->executable      = 0;
  test_acc->rent_epoch      = 0;
  static uchar const fd_flamenco_native_prog_test_1507_acc_0_data[] = { 0x01,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x1e,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 };
  test_acc->data            = fd_flamenco_native_prog_test_1507_acc_0_data;
  test_acc->data_len        = 37UL;
  static uchar const fd_flamenco_native_prog_test_1507_acc_0_post_data[] = { 0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x1e,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 };
  test_acc->result_data     = fd_flamenco_native_prog_test_1507_acc_0_post_data;
  test_acc->result_data_len = 37UL;
  test_acc++;
  fd_base58_decode_32( "1111112ztLiaGqyUxTLXq9x3pvnf7PaGHCfkSzv6K",  (uchar *) &test_acc->pubkey);
  fd_base58_decode_32( "11111131HgKZP9GC8vDMGJ35FG79EfMtnTcTgakQf",  (uchar *) &test_acc->owner);
  test_acc->lamports        = 1UL;
  test_acc->result_lamports = 2UL;
  test_acc->executable      = 0;
  test_acc->rent_epoch      = 0;
  test_acc++;
  fd_base58_decode_32( "1111112z5fWc4FQ4bXatxsmzzG9grr11GgnKyqFTd",  (uchar *) &test_acc->pubkey);
  fd_base58_decode_32( "1111112zV17bAYgmmzTiQ1s2QbUAz7ndmwj3DR5my",  (uchar *) &test_acc->owner);
  test_acc->lamports        = 1UL;
  test_acc->result_lamports = 1UL;
  test_acc->executable      = 0;
  test_acc->rent_epoch      = 0;
  test_acc++;
  fd_base58_decode_32( "BPFLoaderUpgradeab1e11111111111111111111111",  (unsigned char *) &test.program_id);
  static uchar const fd_flamenco_native_prog_test_1507_raw[] = { 0x01,0xa7,0x6f,0xbf,0xee,0xc1,0xce,0x84,0xa4,0x3d,0x9c,0xfb,0x4f,0x32,0xb6,0x40,0xbf,0xbd,0x97,0xce,0x97,0x79,0x16,0x62,0x20,0x39,0x4a,0x68,0xda,0x6f,0x8f,0x4c,0x3d,0x5c,0xf6,0x0a,0x66,0x0e,0xf2,0xc3,0x16,0x43,0xc9,0xd4,0x18,0x50,0x2d,0xcd,0xe8,0xbc,0x77,0xd5,0x98,0x5d,0xdb,0xaf,0x4b,0x4d,0x05,0xf7,0x76,0xa8,0xfd,0x6b,0xaf,0x01,0x01,0x01,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x1e,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x22,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0xa8,0xf6,0x91,0x4e,0x88,0xa1,0xb0,0xe2,0x10,0x15,0x3e,0xf7,0x63,0xae,0x2b,0x00,0xc2,0xb9,0x3d,0x16,0xc1,0x24,0xd2,0xc0,0x53,0x7a,0x10,0x04,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x03,0x03,0x02,0x01,0x00,0x04,0x05,0x00,0x00,0x00 };
  test.raw_tx = fd_flamenco_native_prog_test_1507_raw;
  test.raw_tx_len = 240UL;
  test.expected_result = 0;
  test.custom_err = 0;

  test.accs_len = test_accs_len;
  test.accs = test_accs;

  return fd_executor_run_test( &test, suite );
}
