#include "../fd_tests.h"
int test_54(fd_executor_test_suite_t *suite) {
  fd_executor_test_t test;
  fd_memset( &test, 0, FD_EXECUTOR_TEST_FOOTPRINT );
  test.disable_cnt = 47;
  uchar disabled_features[] = { 113,126,123,106,80,118,110,29,75,61,33,2,56,27,24,128,112,87,76,30,79,92,98,55,83,125,109,15,120,103,89,82,62,78,105,116,114,108,77,111,90,127,124,26,117,122,121 };
  test.disable_feature = disabled_features;
  test.test_name = "config_processor::tests::test_process_store_with_bad_additional_signer";
  test.test_nonce  = 7;
  test.test_number = 54;
  if (fd_executor_test_suite_check_filter(suite, &test)) return -9999;
  ulong test_accs_len = 1;
  fd_executor_test_acc_t* test_accs = fd_alloca( 1UL, FD_EXECUTOR_TEST_ACC_FOOTPRINT * test_accs_len );
  fd_memset( test_accs, 0, FD_EXECUTOR_TEST_ACC_FOOTPRINT * test_accs_len );

  fd_executor_test_acc_t* test_acc = test_accs;
  fd_base58_decode_32( "GRjwK87aG4sGtuvxTvhddzZuyPzXcLH56EUSmbFqZuLG",  (uchar *) &test_acc->pubkey);
  fd_base58_decode_32( "Config1111111111111111111111111111111111111",  (uchar *) &test_acc->owner);
  test_acc->lamports        = 0UL;
  test_acc->result_lamports = 0UL;
  test_acc->executable      = 0;
  test_acc->rent_epoch      = 0;
  static uchar const fd_flamenco_native_prog_test_54_acc_0_data[] = { 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 };
  test_acc->data            = fd_flamenco_native_prog_test_54_acc_0_data;
  test_acc->data_len        = 42UL;
  static uchar const fd_flamenco_native_prog_test_54_acc_0_post_data[] = { 0x00,0x15,0xcd,0x5b,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 };
  test_acc->result_data     = fd_flamenco_native_prog_test_54_acc_0_post_data;
  test_acc->result_data_len = 42UL;
  test_acc++;
  fd_base58_decode_32( "Config1111111111111111111111111111111111111",  (unsigned char *) &test.program_id);
  static uchar const fd_flamenco_native_prog_test_54_raw[] = { 0x01,0xb0,0x9e,0x21,0xef,0xd1,0xd1,0xd1,0x85,0x74,0x95,0x97,0x6d,0xd3,0xb6,0x35,0x7a,0x8e,0xf9,0xe7,0x56,0x52,0x57,0x73,0x51,0x12,0xdd,0x1c,0xdb,0xb0,0xf4,0xab,0x9b,0x63,0x7b,0x09,0x83,0x11,0x6a,0xd9,0x85,0xc0,0x19,0x74,0x62,0x7c,0xed,0x38,0xa2,0x14,0x6e,0xec,0x72,0x79,0xa3,0xf7,0x0b,0x08,0x2e,0xb3,0x59,0xa0,0xf1,0x9d,0x13,0x01,0x00,0x01,0x02,0xe5,0x35,0xca,0xab,0x88,0x8f,0xc3,0x83,0xf7,0x7f,0xab,0x10,0x73,0x79,0x22,0xa5,0x48,0xe9,0xde,0x32,0x3d,0xfc,0xf8,0xb4,0x5c,0xad,0xa0,0x6c,0x44,0x03,0xeb,0xed,0x03,0x06,0x4a,0xa3,0x00,0x2f,0x74,0xdc,0xc8,0x6e,0x43,0x31,0x0f,0x0c,0x05,0x2a,0xf8,0xc5,0xda,0x27,0xf6,0x10,0x40,0x19,0xa3,0x23,0xef,0xa0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x00,0x09,0x00,0x15,0xcd,0x5b,0x07,0x00,0x00,0x00,0x00 };
  test.raw_tx = fd_flamenco_native_prog_test_54_raw;
  test.raw_tx_len = 179UL;
  test.expected_result = 0;
  test.custom_err = 0;

  test.accs_len = test_accs_len;
  test.accs = test_accs;

  return fd_executor_run_test( &test, suite );
}
