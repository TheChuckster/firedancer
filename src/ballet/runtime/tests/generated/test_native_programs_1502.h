#include "../fd_tests.h"
int test_1502(fd_executor_test_suite_t *suite) {
  fd_executor_test_t test;
  fd_memset( &test, 0, FD_EXECUTOR_TEST_FOOTPRINT );
  test.disable_cnt = 47;
  uchar disabled_features[] = { 62,30,76,83,79,61,33,117,15,127,124,109,55,75,120,82,56,108,26,123,121,105,118,80,92,78,29,116,24,77,106,111,2,90,103,113,89,87,128,112,114,27,126,125,98,110,122 };
  test.disable_feature = disabled_features;
  test.test_name = "tests::test_bpf_loader_upgradeable_close";
  test.test_nonce  = 2;
  test.test_number = 1502;
  if (fd_executor_test_suite_check_filter(suite, &test)) return -9999;
  ulong test_accs_len = 3;
  fd_executor_test_acc_t* test_accs = fd_alloca( 1UL, FD_EXECUTOR_TEST_ACC_FOOTPRINT * test_accs_len );
  fd_memset( test_accs, 0, FD_EXECUTOR_TEST_ACC_FOOTPRINT * test_accs_len );

  fd_executor_test_acc_t* test_acc = test_accs;
  fd_base58_decode_32( "1111112zV17bAYgmmzTiQ1s2QbUAz7ndmwj3DR5my",  (uchar *) &test_acc->pubkey);
  fd_base58_decode_32( "BPFLoaderUpgradeab1e11111111111111111111111",  (uchar *) &test_acc->owner);
  test_acc->lamports        = 1UL;
  test_acc->result_lamports = 0UL;
  test_acc->executable      = 0;
  test_acc->rent_epoch      = 0;
  static uchar const fd_flamenco_native_prog_test_1502_acc_0_data[] = { 0x01,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x1a,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 };
  test_acc->data            = fd_flamenco_native_prog_test_1502_acc_0_data;
  test_acc->data_len        = 37UL;
  static uchar const fd_flamenco_native_prog_test_1502_acc_0_post_data[] = { 0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x1a,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 };
  test_acc->result_data     = fd_flamenco_native_prog_test_1502_acc_0_post_data;
  test_acc->result_data_len = 37UL;
  test_acc++;
  fd_base58_decode_32( "1111112ygKucwx7MR4i5XjgyZvqCjaDNmRqckFR9H",  (uchar *) &test_acc->pubkey);
  fd_base58_decode_32( "1111112z5fWc4FQ4bXatxsmzzG9grr11GgnKyqFTd",  (uchar *) &test_acc->owner);
  test_acc->lamports        = 1UL;
  test_acc->result_lamports = 2UL;
  test_acc->executable      = 0;
  test_acc->rent_epoch      = 0;
  test_acc++;
  fd_base58_decode_32( "1111112xUK6fd4FDsg5dEKRuJvskMkrVFf1V3VvCF",  (uchar *) &test_acc->pubkey);
  fd_base58_decode_32( "1111112xsehejMXw48xSfTWvjGCEV2e7kuxCH5kWb",  (uchar *) &test_acc->owner);
  test_acc->lamports        = 1UL;
  test_acc->result_lamports = 1UL;
  test_acc->executable      = 0;
  test_acc->rent_epoch      = 0;
  test_acc++;
  fd_base58_decode_32( "BPFLoaderUpgradeab1e11111111111111111111111",  (unsigned char *) &test.program_id);
  static uchar const fd_flamenco_native_prog_test_1502_raw[] = { 0x01,0x4c,0x62,0x50,0xee,0xc6,0x33,0x62,0xb1,0xf2,0x05,0xb1,0x92,0x9d,0xf4,0x35,0xa5,0xe2,0xeb,0x5e,0x41,0xe7,0x80,0x4a,0x36,0xe8,0x3e,0x8c,0x72,0x95,0x3a,0x45,0x27,0xf0,0x64,0x11,0xaa,0x06,0x74,0xd1,0xf0,0x4f,0x8a,0x2d,0x43,0x91,0x7f,0x5d,0x8d,0x38,0xda,0x76,0xa9,0x8d,0x0f,0x7a,0xf5,0x84,0x63,0x12,0xba,0x64,0xd6,0xa6,0xe5,0x01,0x01,0x01,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x1a,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x1d,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x1f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0xa8,0xf6,0x91,0x4e,0x88,0xa1,0xb0,0xe2,0x10,0x15,0x3e,0xf7,0x63,0xae,0x2b,0x00,0xc2,0xb9,0x3d,0x16,0xc1,0x24,0xd2,0xc0,0x53,0x7a,0x10,0x04,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x03,0x03,0x02,0x01,0x00,0x04,0x05,0x00,0x00,0x00 };
  test.raw_tx = fd_flamenco_native_prog_test_1502_raw;
  test.raw_tx_len = 240UL;
  test.expected_result = 0;
  test.custom_err = 0;

  test.accs_len = test_accs_len;
  test.accs = test_accs;

  return fd_executor_run_test( &test, suite );
}
